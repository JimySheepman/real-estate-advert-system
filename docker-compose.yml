version: "3.9"
services:
    rabbitmq:
        hostname: rabbitmq
        image: rabbitmq:3.8.11-management
        container_name: 'rabbitmq'
        restart: always
        ports:
            - 5672:5672
            - 15672:15672
        volumes:
            - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/mnesia/
        networks:
            - test-network

    postgres-auth-service:
        container_name: postgres-auth-service
        image: postgres:14-alpine
        restart: always
        environment:
            POSTGRES_URL: jdbc:postgresql://localhost:5432/postgres
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: root
        ports:
            - 5432:5432
        networks:
            - test-network
        volumes:
            - ~/.docker-conf/postgres/data1/:/var/lib/postgresql/data

    postgres-advert-service:
        container_name: postgres-advert-service
        image: postgres:14-alpine
        restart: always
        environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: root
        ports:
            - 5433:5432
        networks:
            - test-network
        volumes:
            - ~/.docker-conf/postgres/data2/:/var/lib/postgresql/data

    postgres-report-service:
        container_name: postgres-report-service
        image: postgres:14-alpine
        restart: always
        environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: root
        ports:
            - 5434:5432
        networks:
            - test-network
        volumes:
            - ~/.docker-conf/postgres/data3/:/var/lib/postgresql/data


    auth-service:
        image: auth-service:latest
        container_name: auth-service
        restart: always
        build:
            context: .
            dockerfile: ./auth-service/Dockerfile
        environment:
            POSTGRES_CONNECTION_URL: jdbc:postgresql://postgres-auth-service:5432/postgres
            POSTGRES_USERNAME: postgres
            POSTGRES_PASSWORD: root
            SERVISE_PORT: 8081
        ports:
            - 8081:8081
        depends_on:
            - postgres-auth-service
        volumes:
            - ~/.docker-conf/auth:/code
        networks:
            - test-network

    advert-service:
        image: advert-service:latest
        container_name: advert-service
        restart: always
        build:
            context: .
            dockerfile: ./advert-service/Dockerfile
        environment:
            SERVISE_PORT: 8082
            POSTGRES_CONNECTION_URL: jdbc:postgresql://postgres-advert-service:5432/postgres
            POSTGRES_USERNAME: postgres
            POSTGRES_PASSWORD: root
            RABBITMQ_HOST: rabbitmq
            RABBITMQ_PORT: 5672
            RABBITMQ_USERNAME: guest
            RABBITMQ_PASSWORD: guest
            QUEUE_NAME: advert-queue
            ROUTING_NAME: advert-routing
            EXCHANGE_NAME: advert-exchange
            API_CALL_URI: http://auth-service/api/v1/token/
        ports:
            - 8082:8082
        depends_on:
            - postgres-advert-service
            - auth-service
        volumes:
            - ~/.docker-conf/advert:/code
        networks:
            - test-network



    report-service:
        image: report-service:latest
        container_name: report-service
        restart: always
        build:
            context: .
            dockerfile: ./report-service/Dockerfile
        environment:
            SERVISE_PORT: 8083
            POSTGRES_CONNECTION_URL: jdbc:postgresql://postgres-report-service:5432/postgres
            POSTGRES_USERNAME: postgres
            POSTGRES_PASSWORD: root
            RABBITMQ_HOST: rabbitmq
            RABBITMQ_PORT: 5672
            RABBITMQ_USERNAME: guest
            RABBITMQ_PASSWORD: guest
            QUEUE_NAME: advert-queue
            ROUTING_NAME: advert-routing
            EXCHANGE_NAME: advert-exchange
            API_CALL_URI: http://auth-service/api/v1/token/
        ports:
            - 8083:8083
        depends_on:
            - postgres-report-service
            - auth-service
        volumes:
            - ~/.docker-conf/report:/code
        networks:
            - test-network

networks:
    test-network:
        driver: bridge
